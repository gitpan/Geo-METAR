head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	99.02.20.23.15.40;	author jzawodn;	state Exp;
branches;
next	1.2;

1.2
date	99.02.20.23.14.21;	author jzawodn;	state Exp;
branches;
next	1.1;

1.1
date	99.02.20.23.08.00;	author jzawodn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Damn off-by-one error.
@
text
@#!/usr/bin/perl

# $Id: metar.t,v 1.2 1999/02/20 23:14:21 jzawodn Exp jzawodn $

# Test script for METAR installation.

use strict;
use Test;

BEGIN { plan tests => 6 }

use Geo::METAR;

my %tally = (passed => 0, failed => 0, skipped => 0);

print "Testing METAR.\n";

my $m = new Geo::METAR;

# Create a new instance.

if ($m) {
    ok(1);
} else {
    ok(0);
}

# Set to a given user.

if ($m->metar("KFDY 251450Z 21012G21KT 8SM OVC065 04/M01 A3010 RMK 57014")) {
    ok(1);
} else {
    ok(0);
}

if ($m->SITE eq "KFDY") {
    ok(1);
} else {
    ok(0);
}

if ($m->DATE eq "25") {
    ok(1);
} else {
    ok(0);
}

if ($m->MOD eq "AUTO") {
    ok(1);
} else {
    ok(0);
}

if ($m->F_TEMP eq "39.2") {
    ok(1);
} else {
    ok(0);
}

exit;

__END__


@


1.2
log
@New tests.
@
text
@d3 1
a3 1
# $Id: metar.t,v 1.1 1999/02/20 23:08:00 jzawodn Exp jzawodn $
d10 1
a10 1
BEGIN { plan tests => 5 }
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $Id: test.pl,v 1.5 1998/10/28 03:05:30 jzawodn Exp $
d7 5
d23 1
a23 1
    print Pad("Creation","passed");
d25 1
a25 1
    print Pad("Creation","failed");
d31 1
a31 1
    print Pad("metar","passed");
d33 1
a33 1
    print Pad("metar","failed");
d37 1
a37 1
  print Pad("SITE","passed");
d39 1
a39 1
  print Pad("SITE","failed");
d43 1
a43 1
  print Pad("DATE","passed");
d45 1
a45 1
  print Pad("DATE","failed");
d49 1
a49 1
  print Pad("MOD","passed");
d51 1
a51 1
  print Pad("MOD","failed");
d55 1
a55 1
  print Pad("F_TEMP","passed");
d57 1
a57 36
  print Pad("F_TEMP","failed");
}
 

# summary

print "\n";
print "$tally{passed} tests passed.\n";
print "$tally{skipped} tests skipped.\n";
print "$tally{failed} tests failed.\n";

if ($tally{skipped}) {

print<<EOMS01;

At least one test was skipped. This is probably ok. It
is usually the result of wanting to test parts of METAR
which require stuff that you don't have.

EOMS01

}

if ($tally{failed}) {

print<<EOMF01;

At least one test failed. That's not supposed to happen.
Please contact the author for help or try to fix it
yourself if you feel ambitious.

You *can* still use this module without fixing the problem(s),
but I really don't recommend it.

EOMF01

d62 1
a62 11
sub Pad {
  my $string = shift;
  my $type = shift;
  my $length = length($string);
  for($length..22) {
    $string .= ".";
  }
  $string .= "$type.\n";
  $tally{$type}++;
  return $string;
}
@
